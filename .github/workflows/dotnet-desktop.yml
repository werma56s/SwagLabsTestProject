
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: CI Pipeline for SwagLabsTestProject

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Krok 1: Checkout kodu
      - name: Checkout code
        uses: actions/checkout@v2

      # Krok 2: Zainstaluj .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'  # Użyj odpowiedniej wersji .NET

      # Krok 3: Instalacja Docker i Docker Compose
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo apt-get install -y docker-compose

      # Krok 4: Build aplikacji .NET
      - name: Build .NET application
        run: |
          dotnet restore
          dotnet build --configuration Release

      # Krok 5: Uruchom Docker Compose w odpowiedniej ścieżce
      - name: Start Docker Compose
        run: |
          docker-compose -f SwagLabsTestProject/docker-compose.yml up -d

      # Krok 6: Uruchom testy
      - name: Run .NET tests
        run: |
          dotnet test

      # Krok 7: Zatrzymaj Docker Compose
      - name: Tear down Docker Compose
        run: |
          docker-compose -f SwagLabsTestProject/docker-compose.yml down

      # Krok 7: Przeprowadź działania na Dockerze lub wydanie, jeśli testy się powiodą
      # Możesz dodać tutaj kolejne kroki w zależności od potrzeby (np. wdrożenie)
